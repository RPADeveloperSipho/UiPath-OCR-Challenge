<Activity mc:Ignorable="sap sap2010" x:Class="CaptureImagesTest" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="751.2,4374.4" sap2010:WorkflowViewState.IdRef="CaptureImagesTest_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CaptureImagesTest" sap:VirtualizedContainerService.HintSize="609.6,4309.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="aeneanLLCExist" />
      <Variable x:TypeArguments="x:String" Name="invoiceDate" />
      <Variable x:TypeArguments="x:String" Name="companyName" />
      <Variable x:TypeArguments="x:String" Name="total" />
      <Variable x:TypeArguments="x:String" Name="invoiceNo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG'" sap:VirtualizedContainerService.HintSize="547.2,139.2" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="514ab634-a796-447a-82dd-53bdfdec178d" InformativeScreenshot="264a7e1a81459b90e30b5e46427c7277" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:Click.Target>
    </ui:Click>
    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="547.2,186.4" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="pgup" KeyModifiers="None" SpecialKey="True">
      <ui:SendHotkey.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3d74dfef-916d-45cb-b130-211cd1ff90f0" InformativeScreenshot="628807a0339a0f1fa6543ff8b8b3ad3c" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' src='https://rpachallengeocr.azurewebsites.net/invoices/*' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:SendHotkey.Target>
    </ui:SendHotkey>
    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="547.2,204" sap2010:WorkflowViewState.IdRef="GetOCRText_12">
      <ui:GetOCRText.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_11" Image="[Image]" NoopExecution="False" Text="[companyName]" />
        </ActivityFunc>
      </ui:GetOCRText.OCREngine>
      <ui:GetOCRText.Target>
        <ui:Target Element="{x:Null}" Id="4da51148-d727-4f4d-9a7b-9acc66de2241" InformativeScreenshot="558028aae794dd29d84353ad3e0b64bd" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' src='https://rpachallengeocr.azurewebsites.net/invoices/*' /&gt;">
          <ui:Target.ClippingRegion>
            <ui:Region Rectangle="56, 59, 136, 30" />
          </ui:Target.ClippingRegion>
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:GetOCRText.Target>
      <ui:GetOCRText.Text>
        <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
      </ui:GetOCRText.Text>
    </ui:GetOCRText>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="547.2,329.6" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,219.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:UiElementExists DisplayName="Element Exists -  Aenean LLC Company" Exists="[aeneanLLCExist]" sap:VirtualizedContainerService.HintSize="353.6,130.4" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
            <ui:UiElementExists.Target>
              <ui:Target Element="{x:Null}" Id="bfdcdc7c-5f38-46e3-8d82-f4f1908bde76" InformativeScreenshot="799cf69eacf877418a39487a08d61df1" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;" TimeoutMS="15000">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="55, 60, 138, 27" />
                </ui:Target.ClippingRegion>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <If Condition="[companyName.ToString.Contains(&quot;Aen&quot;)]" sap:VirtualizedContainerService.HintSize="547.2,3361.6" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1362.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="433.6,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Element Exist&quot;]" />
          <ui:GetOCRText Text="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="433.6,204" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" NoopExecution="False" Text="[invoiceNo]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="4b5d1490-c9cf-4222-a192-40312dfb2fb0" InformativeScreenshot="1ca4505fb1c58898b326d0a4bfd70e6f" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' src='https://rpachallengeocr.azurewebsites.net/invoices/*' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="688, 120, 48, 24" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
          </ui:GetOCRText>
          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="433.6,204" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" NoopExecution="False" Text="[invoiceDate]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="df456a86-7f6b-482c-8f83-3f2cf4139cbc" InformativeScreenshot="7f0b32b7d42744c8da4cfa660b9ef4ba" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="662, 100, 80, 23" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
            <ui:GetOCRText.Text>
              <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
            </ui:GetOCRText.Text>
          </ui:GetOCRText>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(invoiceDate.Length&lt;=9,invoiceDate.Insert(7,"-").ToString,invoiceDate.ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="433.6,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[invoiceDate]" />
          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="433.6,204" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_5" Image="[Image]" NoopExecution="False" Text="[companyName]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="4da51148-d727-4f4d-9a7b-9acc66de2241" InformativeScreenshot="558028aae794dd29d84353ad3e0b64bd" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' src='https://rpachallengeocr.azurewebsites.net/invoices/*' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="56, 59, 136, 30" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
            <ui:GetOCRText.Text>
              <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
            </ui:GetOCRText.Text>
          </ui:GetOCRText>
          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="433.6,204" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" NoopExecution="False" Text="[total]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="4e13010c-6650-4fa6-86e7-c72ed7916be7" InformativeScreenshot="24c4af52c384776755d13b7c9b740a9f" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' src='https://rpachallengeocr.azurewebsites.net/invoices/*' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="636, 667, 53, 19" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
            <ui:GetOCRText.Text>
              <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
            </ui:GetOCRText.Text>
          </ui:GetOCRText>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="433.6,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[invoiceNo + &quot;  &quot; + invoiceDate +&quot; &quot;+ companyName + &quot; &quot; + total]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="513.6,1837.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="451.2,117.6" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Element Does Not Exist&quot;]" />
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.2,329.6" sap2010:WorkflowViewState.IdRef="CommentOut_2">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,219.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG'" sap:VirtualizedContainerService.HintSize="353.6,130.4" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="514ab634-a796-447a-82dd-53bdfdec178d" InformativeScreenshot="264a7e1a81459b90e30b5e46427c7277" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.2,376.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,266.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="353.6,177.6" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="pgup" KeyModifiers="None" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3d74dfef-916d-45cb-b130-211cd1ff90f0" InformativeScreenshot="1587e1880d2fcd9f219f32fd19daeed5" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' src='https://rpachallengeocr.azurewebsites.net/invoices/*' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:GetOCRText Text="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="451.2,204" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" NoopExecution="False" Text="[invoiceNo]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="4b5d1490-c9cf-4222-a192-40312dfb2fb0" InformativeScreenshot="0b6f3d11aad280768773da3b2ec30a74" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="717, 83, 45, 17" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
          </ui:GetOCRText>
          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="451.2,204" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" NoopExecution="False" Text="[invoiceDate]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="df456a86-7f6b-482c-8f83-3f2cf4139cbc" InformativeScreenshot="9af90395a6ce38b522bd91e2ed27022b" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="673, 151, 86, 16" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
            <ui:GetOCRText.Text>
              <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
            </ui:GetOCRText.Text>
          </ui:GetOCRText>
          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="451.2,204" sap2010:WorkflowViewState.IdRef="GetOCRText_10">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_9" Image="[Image]" NoopExecution="False" Text="[companyName]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="4da51148-d727-4f4d-9a7b-9acc66de2241" InformativeScreenshot="8b3fd375e02f710d130e90aa1ed14248" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="56, 178, 105, 22" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
            <ui:GetOCRText.Text>
              <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
            </ui:GetOCRText.Text>
          </ui:GetOCRText>
          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="451.2,204" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
            <ui:GetOCRText.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_10" Image="[Image]" NoopExecution="False" Text="[total]" />
              </ActivityFunc>
            </ui:GetOCRText.OCREngine>
            <ui:GetOCRText.Target>
              <ui:Target Element="{x:Null}" Id="4e13010c-6650-4fa6-86e7-c72ed7916be7" InformativeScreenshot="8bb8fd1ec78e685c49d23cb6f2e5d39f" Selector="&lt;html app='chrome.exe' title='*.jpg*' /&gt;&lt;webctrl tag='IMG' /&gt;">
                <ui:Target.ClippingRegion>
                  <ui:Region Rectangle="699, 595, 60, 16" />
                </ui:Target.ClippingRegion>
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetOCRText.Target>
            <ui:GetOCRText.Text>
              <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
            </ui:GetOCRText.Text>
          </ui:GetOCRText>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="451.2,108.8" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[invoiceNo + &quot;  &quot; + invoiceDate +&quot; &quot;+ companyName + &quot; &quot; + total]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>